[build-system] # информация для сборки проекта в пакет
requires = ["setuptools>=64.0", "setuptools_scm[toml]>=8.0"]
build-backend = "setuptools.build_meta"

[project] # метаданные проекта
name = "transport_frames_legacy" # название вашего проекта
dynamic = ["version"]
authors = [
    { name = "Polina Krupenina", email = "krupenina.p@mail.com" },
    { name = "Alexander Morozov", email = "alexandermorozzov@gmail.com" },
] # не забудьте поменять на свое имя :)
description = "A package for transportation data processing and frames management"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENCE" }

dependencies = [ # здесь необходимо вести все устанавливаемые зависимости: пакеты, которые необходимы для адекватной работы вашей библиотеки
    "geopandas>=0.14,<2.0",
    "pandas>=2.2.0,<3.0",
    "shapely==2.1.1",
    "iduedu==0.5.8",
    "loguru>=0.7.3,<0.8.0",
    "momepy==0.6.0",
    "networkit==11.0",
    "networkx>=3.4.2,<4.0.0",
    "numpy==2.1.3",
    "osmnx>=2.0.1,<3.0.0",
    "pandera==0.20.3",
    "pydantic==2.7.3",
    "requests==2.32.3",
    "tqdm>=4.67.0,<5.0.0"
]

classifiers = [ # метаданные для описания проекта пользователям, например, на PyPI: какая лицензия, какое предназначение
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
]

[tool.setuptools.packages.find] # что включать в сборку при установке
include = ["transport_frames*"]

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "no-local-version"

[project.optional-dependencies]
dev = [ # зависимости, необходимые для разработки библиотеки, но не для её использования
    "black[jupyter]==22.3",     # Форматирование, включая поддержку Jupyter
    "mapclassify==2.6.1",       # Визуализация данных в Jupyter
    "folium==0.14.0",           # Карты для Jupyter
    "matplotlib-inline==0.1.6", # Встроенные графики в Jupyter
    "ipykernel",                # Ядро для работы в Jupyter
    "jupyter",                  # Jupyter Notebook
    "ipywidgets",               # Виджеты для интерактивных элементов
    "isort==5.10.1",            # Сортировка импортов
    "pylint==2.17.5",           # Линтинг
    "pre-commit>=3.1",          # Интеграция хуков для автоформатирования
    "build",                    # Сборка пакета для публикации
    "twine",                    # Публикация пакета на PyPI
]

test = [ # зависимости, необходимые для тестирования библиотеки
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
]

docs = [ # зависимости, необходимые для сборки документации
    "docutils>=0.18.0,<1.0.0",
    "sphinx==6.2.1",
    "sphinx-book-theme==1.0.1",
    "nbsphinx==0.9.3",
    "nbsphinx-link==1.3.0",
    "numpydoc==1.5.0",
    "autodocsumm==0.2.12",
    "myst_parser>=3.0.0,<4.0.0",
    "sphinx_rtd_theme>=1.2.0,<2.0.0",
    "pandoc>=2.0.0,<3.0.0",
]


[project.urls]
"Repository" = "https://github.com/alexandermorozzov/transport-frames"
"Bug Tracker" = "https://github.com/alexandermorozzov/transport-frames/issues"

# всякие истории, связанные с форматированием кода
[tool.black]
line-length = 120
target-version = ['py310']

[tool.pylint.format]
max-line-length = 120
expected-line-ending-format = "LF"

[tool.pylint.main]
extension-pkg-allow-list = ["pydantic"]

[tool.pycodestyle]
max-line-length = 120


[tool.isort]
lines_after_imports = 2
multi_line_output = 3
line_length = 120
include_trailing_comma = true